#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
ggplot(data = full, aes(x = Survived, y = Fare)) +
geom_boxplot() + coord_flip() +
labs( y = 'Fare', x = 'Survived',
title = 'Fare Box')
#以下函式計算95%信賴區間
full <- na.omit(full)
with(full,
tapply(Fare, Survived,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(Fare ~ Survived, data = full)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(Fare ~ Survived, data = full, var.equal = TRUE)
library(Hmisc)
full$Embarked <- factor(full$Embarked,
levels = c('S',
'C',
'Q'
))
tapply(full$Fare, full$Embarked, mean)
full <- na.omit(full)
ggplot(data = full,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full$Fare) ,
linetype = 'dotted') +
labs(x = '登入港口', y = '票價') +
coord_flip()
full$Fsize <- full$SibSp + full$Parch
anova(m1 <- lm(Fare ~ Fsize, data = full))
ggplot(data = full,
aes(group = Survived,
y = Fare, x = Pclass)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Survived,
y = Fare, x = Pclass),
method = 'lm', se = F) +
facet_grid( . ~  Survived) +
labs(x = '家庭', y = '票價')
full$Survived <- as.value(full$Survived)
full$Survived <- as.numeric(full$Survived)
ggplot(data = full,
aes(group = Pclass,
y = Fare, x = Survived)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Pclass,
y = Fare, x = Survived),
method = 'lm', se = F) +
facet_grid( . ~  Survived) +
labs(x = '家庭', y = '票價')
full$Survived <- as.numeric(full$Survived)
ggplot(data = full,
aes(group = Pclass,
y = Fare, x = Survived)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Pclass,
y = Fare, x = Survived),
method = 'lm', se = F) +
facet_grid( . ~  Pclass) +
labs(x = '家庭', y = '票價')
full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Pclass,
y = Fare, x = Survived)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Pclass,
y = Fare, x = Survived),
method = 'lm', se = F) +
facet_grid( . ~  Pclass) +
labs(x = '家庭', y = '票價')
library(Hmisc)
full$Embarked <- factor(full$Embarked,
levels = c('S',
'C',
'Q'
))
tapply(full$Fare, full$Embarked, mean)
# Get rid of our missing passenger IDs
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
# Use ggplot2 to visualize embarkment, passenger class, & median fare
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Pclass,
y = Fare, x = Survived)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Pclass,
y = Fare, x = Survived),
method = 'lm', se = F) +
facet_grid( . ~  Pclass) +
labs(x = '家庭', y = '票價')
#full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Embarked,
y = Fare, x = Pclass)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Pclass),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '家庭', y = '票價')
#full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Embarked,
y = Fare, x = Pclass)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Pclass),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '港口', y = '票價')
#full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Embarked,
y = Fare, x = Pclass)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Pclass),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '港口', y = '票價')
anova(m2 <- update(m1, . ~ . +
Embarked, data = all))
anova(m3 <- update(m2, . ~ . - Pclass,  data = all))
anova(m2 <- update(m1, . ~ . +
Embarked, data = all))
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
train <- read.csv('./Data/train.csv', stringsAsFactors = F)
test  <- read.csv('./Data/test.csv', stringsAsFactors = F)
gender <- read.csv('./Data/gender_submission.csv', stringsAsFactors = F)
k1 <- merge(test, gender, by="PassengerId", all = T)
full <- bind_rows(train, k1)
str(full)
full$Survived <- as.factor(full$Survived)
str(full)
head(full)
summary(full)
tail(full)
library(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
ggplot(data = full, aes(x = Survived, y = Fare)) +
geom_boxplot() + coord_flip() +
labs( y = 'Fare', x = 'Survived',
title = 'Fare Box')
#以下函式計算95%信賴區間
full <- na.omit(full)
with(full,
tapply(Fare, Survived,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(Fare ~ Survived, data = full)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(Fare ~ Survived, data = full, var.equal = TRUE)
library(Hmisc)
full$Embarked <- factor(full$Embarked,
levels = c('S',
'C',
'Q'
))
tapply(full$Fare, full$Embarked, mean)
full <- na.omit(full)
ggplot(data = full,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full$Fare) ,
linetype = 'dotted') +
labs(x = '登入港口', y = '票價') +
coord_flip()
# Get rid of our missing passenger IDs
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
# Use ggplot2 to visualize embarkment, passenger class, & median fare
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Fsize <- full$SibSp + full$Parch
anova(m1 <- lm(Fare ~ Fsize, data = full))
#full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Embarked,
y = Fare, x = Pclass)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Pclass),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '港口', y = '票價')
anova(m2 <- update(m1, . ~ . +
Embarked, data = all))
anova(m2 <- update(m1, . ~ . +
Embarked, data = full))
anova(m3 <- update(m2, . ~ . - Pclass,  data = full))
res_lm <- lapply(list(m1, m2, m3), summary)
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
anova(m3 <- update(m2, . ~ . - Pclass,  data = full))
res_lm <- lapply(list(m1, m2, m3), summary)
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
library(coefplot)
install.packages("coefplot")
library(coefplot)
m2 <- lm(Fare ~ Pclass + Embarked,
data = all)
library(coefplot)
m2 <- lm(Fare ~ Pclass + Embarked,
data = full)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 票價')
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
train <- read.csv('./Data/train.csv', stringsAsFactors = F)
test  <- read.csv('./Data/test.csv', stringsAsFactors = F)
gender <- read.csv('./Data/gender_submission.csv', stringsAsFactors = F)
k1 <- merge(test, gender, by="PassengerId", all = T)
full <- bind_rows(train, k1)
str(full)
full$Survived <- as.factor(full$Survived)
str(full)
head(full)
summary(full)
tail(full)
library(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
ggplot(data = full, aes(x = Survived, y = Fare)) +
geom_boxplot() + coord_flip() +
labs( y = 'Fare', x = 'Survived',
title = 'Fare Box')
#以下函式計算95%信賴區間
full <- na.omit(full)
with(full,
tapply(Fare, Survived,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(Fare ~ Survived, data = full)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(Fare ~ Survived, data = full, var.equal = TRUE)
library(Hmisc)
full$Embarked <- factor(full$Embarked,
levels = c('S',
'C',
'Q'
))
tapply(full$Fare, full$Embarked, mean)
full <- na.omit(full)
ggplot(data = full,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full$Fare) ,
linetype = 'dotted') +
labs(x = '登入港口', y = '票價') +
coord_flip()
# Get rid of our missing passenger IDs
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
# Use ggplot2 to visualize embarkment, passenger class, & median fare
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Fsize <- full$SibSp + full$Parch
anova(m1 <- lm(Fare ~ Fsize, data = full))
#full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Embarked,
y = Fare, x = Pclass)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Pclass),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '港口', y = '票價')
anova(m2 <- update(m1, . ~ . +
Embarked, data = full))
anova(m3 <- update(m2, . ~ . - Pclass,  data = full))
res_lm <- lapply(list(m1, m2, m3), summary)
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1, m2)
library(coefplot)
m2 <- lm(Fare ~ Pclass + Embarked,
data = full)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 票價')
library(coefplot)
m2 <- lm(Fare ~ Pclass + Embarked,
data = full)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 票價')
fit_m2 <- data.frame(all[, c(3, 10, 12)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(all[, c(3, 10, 12)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(full[, c(3, 10, 12)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
ggplot(data = fit_m2, aes(x = scale(resid)), group = Embarked ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = Embarked)) +
scale_linetype_manual(values = 4:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.50, .8))
library(lattice)
qqmath(~ scale(resid) | Embarked, data = fit_m2, type = c('p', 'g', 'r'),
xlab = '常態位數', ylab = '標準化殘差', layout = c(2, 3),
pch = '.', cex = 2)
library(MASS)
library(ggplot2)
ggplot(data = fit_m2, aes(x = fitted, y = scale(resid), group = Embarked )) +
geom_point(pch = 20, size = 1) +
stat_smooth(method = 'rlm', se = F) +
facet_grid(Embarked ~ .) +
labs(x = '數學預測值', y = '標準化殘差')
ggplot(data = fit_m2, aes(x = infl, y = scale(resid), group = Embarked)) +
geom_text(aes(label = rownames(fit_m2)), cex = 2) +
geom_hline(yintercept = 0, linetype = 'dotted') +
facet_grid(Embarked ~ .) +
labs(x = '影響值', y = '標準化殘差')
summary(influence(m2)$hat)
colMeans(all_Fare)
colMeans(full_Fare)
colMeans(all_Fare)
colMeans(all)
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
train <- read.csv('./Data/train.csv', stringsAsFactors = F)
test  <- read.csv('./Data/test.csv', stringsAsFactors = F)
gender <- read.csv('./Data/gender_submission.csv', stringsAsFactors = F)
k1 <- merge(test, gender, by="PassengerId", all = T)
full <- bind_rows(train, k1)
str(full)
full$Survived <- as.factor(full$Survived)
str(full)
head(full)
summary(full)
tail(full)
library(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
ggplot(data = full, aes(x = Survived, y = Fare)) +
geom_boxplot() + coord_flip() +
labs( y = 'Fare', x = 'Survived',
title = 'Fare Box')
#以下函式計算95%信賴區間
full <- na.omit(full)
with(full,
tapply(Fare, Survived,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(Fare ~ Survived, data = full)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(Fare ~ Survived, data = full, var.equal = TRUE)
library(Hmisc)
full$Embarked <- factor(full$Embarked,
levels = c('S',
'C',
'Q'
))
tapply(full$Fare, full$Embarked, mean)
full <- na.omit(full)
ggplot(data = full,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full$Fare) ,
linetype = 'dotted') +
labs(x = '登入港口', y = '票價') +
coord_flip()
# Get rid of our missing passenger IDs
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
# Use ggplot2 to visualize embarkment, passenger class, & median fare
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Fsize <- full$SibSp + full$Parch
anova(m1 <- lm(Fare ~ Fsize, data = full))
#full$Survived <- as.numeric(full$Survived)-1
ggplot(data = full,
aes(group = Embarked,
y = Fare, x = Pclass)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Pclass),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '港口', y = '票價')
anova(m2 <- update(m1, . ~ . +
Embarked, data = full))
anova(m3 <- update(m2, . ~ . - Pclass,  data = full))
res_lm <- lapply(list(m1, m2, m3), summary)
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1, m2)
library(coefplot)
m2 <- lm(Fare ~ Pclass + Embarked,
data = full)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 票價')
fit_m2 <- data.frame(full[, c(3, 10, 12)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
ggplot(data = fit_m2, aes(x = scale(resid)), group = Embarked ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = Embarked)) +
scale_linetype_manual(values = 4:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.50, .8))
library(lattice)
qqmath(~ scale(resid) | Embarked, data = fit_m2, type = c('p', 'g', 'r'),
xlab = '常態位數', ylab = '標準化殘差', layout = c(2, 3),
pch = '.', cex = 2)
library(MASS)
library(ggplot2)
ggplot(data = fit_m2, aes(x = fitted, y = scale(resid), group = Embarked )) +
geom_point(pch = 20, size = 1) +
stat_smooth(method = 'rlm', se = F) +
facet_grid(Embarked ~ .) +
labs(x = '數學預測值', y = '標準化殘差')
ggplot(data = fit_m2, aes(x = infl, y = scale(resid), group = Embarked)) +
geom_text(aes(label = rownames(fit_m2)), cex = 2) +
geom_hline(yintercept = 0, linetype = 'dotted') +
facet_grid(Embarked ~ .) +
labs(x = '影響值', y = '標準化殘差')
summary(influence(m2)$hat)
a <- sub("male","0",all$Sex)
a <- sub("male","0", all$Sex)
summary(influence(m2)$hat)
a <- sub("male","0", all$Sex)
a <- sub("male","0", full$Sex)
b <- sub("fe0","1",a)
all$Sex <- as.numeric(b)
a <- sub("male","0", full$Sex)
b <- sub("fe0","1",a)
full$Sex <- as.numeric(b)
full$SibSp <- as.numeric(all$SibSp)
a <- sub("male","0", full$Sex)
b <- sub("fe0","1",a)
full$Sex <- as.numeric(b)
full$SibSp <- as.numeric(full$SibSp)
full$Parch <- as.numeric(full$Parch)
full_Fare <- all[, c('Fare', 'Sex',
'Age', 'SibSp', 'Parch')]
a <- sub("male","0", full$Sex)
b <- sub("fe0","1",a)
full$Sex <- as.numeric(b)
full$SibSp <- as.numeric(full$SibSp)
full$Parch <- as.numeric(full$Parch)
full_Fare <- full[, c('Fare', 'Sex',
'Age', 'SibSp', 'Parch')]
colMeans(full_Fare)
library(heplots)
install.packages("heplots")
library(heplots)
scatterplotMatrix(~ Fare + Sex + Age + SibSp + Parch, data= full_Fare,
pch = '.', cex = 3, smooth = FALSE, ellipse = TRUE,
diagonal = 'none', lower.panel = NULL)
library(corrplot)
install.packages("corrplot")
library(corrplot)
summary(m4 <- lm(Fare ~ +Sex +Age +SibSp +Parch, data = full_Fare ))
library(effects)
install.packages("effeects")
install.packages("effects")
library(effects)
plot(allEffects(m4), main = '', ylim = c(550, 670), grid = T)
install.packages("lm.beta")
